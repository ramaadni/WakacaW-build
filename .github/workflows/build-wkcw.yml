name: build-wkcw

on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'Link repo kernel'
        required: true
        default: 'https://github.com/ramaadni/kernel_common_gki-5.10'
      KERNEL_BRANCH:
        description: 'Branch kernel'
        required: true
        default: 'wkcw'
      RELEASE:
        description: 'Release kernel?'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [noroot, kernelsu, sukisu]
    name: Build ${{ matrix.variant }}

    steps:
    - name: Set up dependencies
      run: |
        sudo apt update
        sudo apt install -y git wget curl build-essential bc bison \
          flex libssl-dev libncurses-dev libelf-dev ccache python3 unzip

    - name: Create Swap
      run: |
        sudo fallocate -l 10G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile

    - name: Clone Kernel Source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_REPO }} -b ${{ github.event.inputs.KERNEL_BRANCH }} kernel

    - name: Setup Worktree if Needed
      run: |
        if [[ "${{ matrix.variant }}" != "noroot" ]]; then
          cd kernel
          git config user.name "Ramadhani"
          git config user.email "ramadhanifals@gmail.com"
          git branch -f temp-${{ matrix.variant }} ${{ github.event.inputs.KERNEL_BRANCH }}
          git worktree add ../${{ matrix.variant }} temp-${{ matrix.variant }}
        fi

    - name: Inject Variant Patch (KSU/SukiSU)
      run: |
        if [[ "${{ matrix.variant }}" == "kernelsu" ]]; then
          cd kernelsu
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
        elif [[ "${{ matrix.variant }}" == "sukisu" ]]; then
          cd sukisu
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s main
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
        fi

    - name: Download Clang
      run: |
        mkdir clang
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
        tar -xf clang.tar.gz -C clang

    - name: Build Kernel
      run: |
        if [[ "${{ matrix.variant }}" == "noroot" ]]; then
          cd kernel
        else
          cd ${{ matrix.variant }}
        fi

        export ARCH=arm64
        export SUBARCH=arm64
        export CLANG_PATH=$GITHUB_WORKSPACE/clang
        export PATH=$CLANG_PATH/bin:$PATH

        make O=out ARCH=arm64 CC=clang LLVM=1 LLVM_IAS=1 gki_defconfig
        make -j$(nproc) O=out ARCH=arm64 CC=clang LLVM=1 LLVM_IAS=1

    - name: Package Kernel with AnyKernel3
      id: zipkernel
      run: |
        DATE=$(date +%Y%m%d)
        echo "DATE=$DATE" >> $GITHUB_ENV

        if [[ "${{ matrix.variant }}" == "noroot" ]]; then
          ZIP_NAME="WakacaW-GKI-${DATE}.zip"
        elif [[ "${{ matrix.variant }}" == "kernelsu" ]]; then
          ZIP_NAME="WakacaW-GKI-KSUNext+SUSFS-${DATE}.zip"
        elif [[ "${{ matrix.variant }}" == "sukisu" ]]; then
          ZIP_NAME="WakacaW-GKI-SukiSU+SUSFS-${DATE}.zip"
        fi

        git clone https://github.com/ramaadni/AnyKernel3

        if [[ "${{ matrix.variant }}" == "noroot" ]]; then
          cp kernel/out/arch/arm64/boot/Image.gz AnyKernel3/
        else
          cp ${{ matrix.variant }}/out/arch/arm64/boot/Image.gz AnyKernel3/
        fi

        cd AnyKernel3
        zip -r9 "../$ZIP_NAME" ./*
        echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT

    - name: Upload Flashable Kernel ZIP
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.zipkernel.outputs.zip_name }}
        path: ${{ steps.zipkernel.outputs.zip_name }}

  release:
    needs: build
    if: ${{ github.event.inputs.RELEASE == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Current Date
        run: echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: WakacaW-GKI-${{ env.DATE }}
          name: WakacaW GKI - ${{ env.DATE }}
          files: "*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
